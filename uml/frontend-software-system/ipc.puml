@startuml
package ipc {
/'
------------------------------
Server
------------------------------
'/
    ' The channel
    class SocketServer {
        -receiver: Receiver
        +start(): void
        +stop(): void
    }
    SocketServer ..> Receiver: <<uses>>

    class Receiver {
        -eventBuffers: IEventBuffer[]
        +addBuffer(buffer: IEventBuffer):void
        ~handleMessage(rawMessage: ByteArray): void
    }
    Receiver ..> Event: <<creates>>
    Receiver "1" o-- "*" IEventBuffer

    interface IEventBuffer {
        +feed(event: Event): void
    }
/'
------------------------------
Client
------------------------------
'/
    ' The channel
    class SocketClient {
        ~sendDataToServer(data: Frame, socketPath: String): void
    }

    class Transmitter {
        -socketClient: SocketClient
        +serializeToJson(frame: Frame): String
    }
    Transmitter ..> SocketClient: <<uses>>
}
@enduml

