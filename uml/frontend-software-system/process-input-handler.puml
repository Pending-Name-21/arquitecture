@startuml
package "Process Input Handler" {
    interface IPublisher {
        ~publish(): void
        +subscribe(subscriber: IEventSubscriber): void
    }

    interface IEventSubscriber {
        +doNotify(event: T): void
    }

    abstract class AEventManager {
        -concurrentEventsQueue: T[]
        -subscribers: IEventSubscriber[]
    }
    AEventManager ..> Event: <<uses>>
    AEventManager "1" *-- "many" IEventSubscriber
    AEventManager ..|> IEventBuffer
    AEventManager ..|> IPublisher

  class InputVerifier {
    -processInputPublisher : ProcessInputPublisher
    -publishers: IPublisher[]
    +check() : void
  }
  InputVerifier ..> IPublisher: <<uses>>
}
@enduml

