@startuml
package "Render Handler" {
    interface Repository {
        ~add(item: T): void
        ~retrieve(): T[]
    }
    Repository <|.. SpriteRepository
    Repository <|.. SoundRepository

!startsub INTERFACE
    interface Factory {
        +createPiece(path: String): T
    }
endsub INTERFACE
    Factory <|.. SpriteFactory
    Factory <|.. SoundFactory

    class RenderManager {
        -transmitter: Transmitter
        -spriteRepository: Repository
        -SoundRepository: Repository

        +renderSprites() : void
        +playSounds() : void
    }
    RenderManager ..> Transmitter: <<uses>>
    RenderManager ..> Frame: <<create>>
    RenderManager ..> Repository: <<uses>>

    class SoundRepository {
        -sounds : Sound[]
    }
    SoundRepository "1" *-- "1..*" Sound

    class SoundFactory  {
        -soundRepository: Repository
        +createSound(path: String) : Sound
    }
    SoundFactory ..> Sound: <<creates>>
    SoundFactory ..> Repository: <<use>>

    class SpriteFactory  {
        -spriteRepository: Repository
        +createSprite(path: String): Sprite
    }
    SpriteFactory ..> Sprite: <<creates>>
    SpriteFactory ..> Repository: <<use>>

    class SpriteRepository {
        -sprites: Sprite[]
    }
    SpriteRepository "1" *-- "1..*" Sprite

    class Frame {
        -sounds: Sound[]
        -sprites: Sprite[]
    }
    Frame "1" *-- "1..*" Sprite
    Frame "1" *-- "1..*" Sound
}
@enduml

