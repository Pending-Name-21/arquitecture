@startuml
package "Render Handler" {
    interface IRepository {
        ~add(item: T): void
        ~retrieve(): T[]
    }
    'note top of IRepository : T could be Sprite or Sound
    IRepository <|.. SpriteRepository
    IRepository <|.. SoundRepository

!startsub INTERFACE
    class SpriteBuilder {
        -spriteRepository: IRepository
        -fileHandler: FileHandler
        +buildCoord(x: int, y: int): SpriteBuilder
        +buildSize(height: double, width: double): SpriteBuilder
        +buildPath(filePath: String): SpriteBuilder
        +assemble(): Sprite
    }

    class SoundBuilder {
        -soundRepository: IRepository
        -fileHandler: FileHandler
        +buildPath(filePath: String): SoundBuilder
        +assemble(): Sound
    }
!endsub
    SpriteBuilder ..> Sprite: <<creates>>
    SpriteBuilder ..> FileHandler: <<uses>>
    SpriteBuilder ..> IRepository: <<uses>>

    SoundBuilder  ..> Sound: <<creates>>
    SoundBuilder  ..> FileHandler: <<uses>>
    SoundBuilder  ..> IRepository: <<uses>>

    class RenderManager {
        -transmitter: Transmitter
        -spriteRepository: IRepository
        -soundRepository: IRepository
        +render(): void
    }
    RenderManager ..> Transmitter: <<uses>>
    RenderManager ..> Frame: <<create>>
    RenderManager ..> IRepository: <<uses>>

    class SoundRepository {
        -sounds : Sound[]
    }
    'note top of SoundRepository : would retreive only playable sounds
    SoundRepository "1" *-- "1..*" Sound

    class SpriteRepository {
        -sprites: Sprite[]
    }
    SpriteRepository "1" *-- "1..*" Sprite

    class Frame {
        -sounds: Sound[]
        -sprites: Sprite[]
    }
    Frame "1" *-- "1..*" Sprite
    Frame "1" *-- "1..*" Sound
}
@enduml

