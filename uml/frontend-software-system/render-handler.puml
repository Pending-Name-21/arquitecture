@startuml
package "Render Handler" {
    ' source
    class RenderManager {
        -serializator: Serializator
        -spriteRenderer : SpriteRenderer
        -soundPlayer : SoundPlayer

        +renderSprites() : void
        +playSounds() : void
    }
    RenderManager ..> Serializator: <<uses>>
    RenderManager ..> Frame: <<create>>

    class SpriteRenderer {
        -sprites : Sprite[]
        -spriteFactory : SpriteFactory

        +addSprite(sprite : Sprite) : void
        +removeSprite(sprite : Sprite) : void
        +updateSprite(sprite : Sprite, newSprite : Sprite) : void
        +renderSprite(sprite: Sprite) : void
    }

    class SoundPlayer {
        -sounds : Sound[]
        -soundFactory : SoundFactory

        +addSound(sound : Sound) : void
        +removeSound(sound : Sound) : void
        +removeSoundFromSprite(sprite : Sprite) : void
        +playSound(sprite : Sprite) : void
        +playSound(sound : Sound) : void
    }

    interface ISpriteFactory {
        +createSprite() : Sprite
    }

    interface ISoundFactory {
        +createSound() : Sound
    }

!startsub INTERFACE
    class SpriteFactory  {
        +createSprite() : Sprite
    }

    class SoundFactory  {
        +createSound() : Sound
    }
!endsub
    SpriteFactory ..|> ISpriteFactory
    SoundFactory ..|> ISoundFactory

    RenderManager o-- SpriteRenderer : uses
    RenderManager o-- SoundPlayer : uses
    RenderManager o-- SpriteFactory : creates sprites
    RenderManager o-- SoundFactory : creates sounds
    SpriteRenderer *-- Sprite : manipulates
    SoundPlayer *-- Sound : manipulates

    ' The message
    class Frame {
        -sound: Sound
        -sprite: Sprite
    }
    Frame "1" *-- "many" Sprite
    Frame "1" *-- "many" Sound
}
@enduml
