@startuml

note "T could be Sprite or Sound" as N1

package "Render Handler" {
    interface IRepository {
        ~add(item: T): void
        ~retrieve(): T[]
    }
    IRepository <|.. SpriteRepository
    IRepository <|.. SoundRepository
    IRepository  .. N1

!startsub INTERFACE
    abstract class AFactory {
        -repository: IRepository
        -filehandler: FileHandler
        +createPiece(path: String): T
    }
!endsub
    AFactory <|-- SpriteFactory
    AFactory <|-- SoundFactory
    AFactory ..> FileHandler: <<uses>>
    AFactory ..> IRepository: <<uses>>
    AFactory .. N1

    class RenderManager {
        -transmitter: Transmitter
        -spriteRepository: IRepository
        -SoundRepository: IRepository
        +render(): void
    }
    RenderManager ..> Transmitter: <<uses>>
    RenderManager ..> Frame: <<create>>
    RenderManager ..> IRepository: <<uses>>

    class SoundRepository {
        -sounds : Sound[]
    }
    SoundRepository "1" *-- "1..*" Sound

    class SoundFactory  {
        -soundRepository: IRepository
    }
    SoundFactory ..> Sound: <<creates>>

    class SpriteFactory  {
        -spriteRepository: IRepository
    }
    SpriteFactory ..> Sprite: <<creates>>

    class SpriteRepository {
        -sprites: Sprite[]
    }
    SpriteRepository "1" *-- "1..*" Sprite

    class Frame {
        -sounds: Sound[]
        -sprites: Sprite[]
    }
    Frame "1" *-- "1..*" Sprite
    Frame "1" *-- "1..*" Sound
}
@enduml

