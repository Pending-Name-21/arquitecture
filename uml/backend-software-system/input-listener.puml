@startuml input-listener-console
package "Console" {

    abstract class IEventListener {
        +handler: IEventHandler
        +native_listen(): List<String>
    }

    class KeyboardListener {
        +handler: IEventHandler
        +native_listen(): List<String>
    }

    class MouseListener {
        +handler: IEventHandler
        +native_listen(): List<String>
    }

    IEventListener <|-- KeyboardListener
    IEventListener <|-- MouseListener

    abstract class IEventHandler {
        -poolEvents: Vec<String>
        +handleEvent(): void
        +getPoolEvent(): Vec<String>
    }

    class KeyboardEventHandler {
        -poolEvents: Vec<String>
        +handleEvent(): void
        +getPoolEvent(): Vec<String>
    }

    class MouseEventHandler {
        -poolEvents: Vec<String>
        +handleEvent(): void
        +getPoolEvent(): Vec<String>
    }

    IEventHandler <|-- KeyboardEventHandler
    IEventHandler <|-- MouseEventHandler

    IEventHandler *-- IEventListener : "composed of"

    class AppHandler {
        -eventHandlers: Vec<IEventHandler>
        +init(): void
    }

    AppHandler o-- IEventHandler : "composed of"

}
@enduml
